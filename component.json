{
    "title": "Jokes One",
    "description": " Jokes One API offers a complete feature rich REST API access to its jokes platform.  This is the documentation for the world famous [jokes API](https://jokes.one/api/joke/).  If you are a subscriber and you are trying this from a console add 'X-JokesOne-Api-Secret' header and add your api key as the header value. You can test and play with the API right here on this web page. For using the private end points and subscribing to the API please visit https://jokes.one/api/joke/.",
    "docsUrl": "",
    "url": "https://api.apis.guru/v2/specs/jokes.one/1.1/swagger.json",
    "envVars": {},
    "credentials": {
        "fields": {
            "server": {
                "label": "Server",
                "viewClass": "SelectView",
                "model": [
                    "https://api.jokes.one/",
                    "http://api.jokes.one/",
                    "--- Custom URL"
                ],
                "required": true
            },
            "otherServer": {
                "label": "Custom Server URL",
                "viewClass": "TextFieldView"
            },
            "X-JokesOne-Api-Secret": {
                "label": "X-JokesOne-Api-Secret (X-JokesOne-Api-Secret)",
                "viewClass": "TextFieldView"
            }
        }
    },
    "triggers": {
        "startFlow": {
            "main": "./lib/triggers/startFlow.js",
            "type": "polling",
            "title": "Start Flow",
            "fields": {}
        }
    },
    "actions": {
        "get_jod": {
            "main": "./lib/actions/get_jod.js",
            "title": "Gets `Joke of the Day`.\nOptional `category` param determines\nthe category of returned joke of the day\n",
            "description": "Gets `Joke of the Day`.\nOptional `category` param determines\nthe category of returned joke of the day\n",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_jod.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get_jod_categories": {
            "main": "./lib/actions/get_jod_categories.js",
            "title": "Gets a list of `Joke of the Day` Categories.\n",
            "description": "Gets a list of `Joke of the Day` Categories.\n",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_jod_categories.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "delete_joke": {
            "main": "./lib/actions/delete_joke.js",
            "title": "Delete a joke. The user needs to be the owner of the joke to be able to delete it.\n",
            "description": "Delete a joke. The user needs to be the owner of the joke to be able to delete it.\n",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/delete_joke.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get_joke": {
            "main": "./lib/actions/get_joke.js",
            "title": "Gets a `Joke` with a given `id`.",
            "description": "Gets a `Joke` with a given `id`.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_joke.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "patch_joke": {
            "main": "./lib/actions/patch_joke.js",
            "title": "Update a joke",
            "description": "Update a joke",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/patch_joke.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "put_joke": {
            "main": "./lib/actions/put_joke.js",
            "title": "Add a new joke to your private collection.",
            "description": "Add a new joke to your private collection.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/put_joke.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get_joke_categories": {
            "main": "./lib/actions/get_joke_categories.js",
            "title": "Gets a list of `Joke` Categories.\n",
            "description": "Gets a list of `Joke` Categories.\n",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_joke_categories.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get_joke_list": {
            "main": "./lib/actions/get_joke_list.js",
            "title": "Get the list of jokes in your private collection.",
            "description": "Get the list of jokes in your private collection.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_joke_list.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get_joke_random": {
            "main": "./lib/actions/get_joke_random.js",
            "title": "Gets a `Random Joke`. When you are in a hurry this is what you call to get a random famous joke.",
            "description": "Gets a `Random Joke`. When you are in a hurry this is what you call to get a random famous joke.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_joke_random.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get_joke_search": {
            "main": "./lib/actions/get_joke_search.js",
            "title": "Search for a `Joke` in Jokes One platform. Optional `category` , `author`, `minlength`, `maxlength` params determines the filters applied while searching for the joke. ",
            "description": "Search for a `Joke` in Jokes One platform. Optional `category` , `author`, `minlength`, `maxlength` params determines the filters applied while searching for the joke. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_joke_search.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "post_joke_tags_add": {
            "main": "./lib/actions/post_joke_tags_add.js",
            "title": "Add a tag to a given Joke.",
            "description": "Add a tag to a given Joke.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/post_joke_tags_add.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "post_joke_tags_remove": {
            "main": "./lib/actions/post_joke_tags_remove.js",
            "title": "Remove a tag from a given joke.",
            "description": "Remove a tag from a given joke.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/post_joke_tags_remove.in.json",
                "out": {
                    "type": "object"
                }
            }
        }
    }
}